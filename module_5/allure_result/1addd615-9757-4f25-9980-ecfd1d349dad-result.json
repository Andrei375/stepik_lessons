{"name": "test_guest_can_add_product_to_basket[offer7]", "status": "skipped", "statusDetails": {"message": "XFAIL\n\nAssertionError: Product name is not correct", "trace": "self = <test_product_page.TestProductPage object at 0x0000020432BE8670>\nbrowser = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"a92cc4c9abe5a728cf9bddce4841e9c6\")>, promo_offer = 'offer7'\n\n    @pytest.mark.parametrize('promo_offer',\n                             [\"offer0\", \"offer1\", \"offer2\", \"offer3\", \"offer4\", \"offer5\", \"offer6\",\n                              pytest.param(\"offer7\", marks=pytest.mark.xfail),\n                              \"offer8\", \"offer9\"])\n    def test_guest_can_add_product_to_basket(self, browser, promo_offer):\n        product_link = f\"{link}/?promo={promo_offer}\"\n        page = ProductPage(browser, product_link)\n        page.open()\n    \n        page.add_to_basket()\n        page.solve_quiz_and_get_code()\n    \n>       page.should_be_correct_product_in_basket()\n\nmodule_5\\test_product_page.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nmodule_5\\pages\\product_page.py:10: in should_be_correct_product_in_basket\n    self.should_be_correct_product_name()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <pages.product_page.ProductPage object at 0x0000020432BFA430>\n\n    def should_be_correct_product_name(self):\n        product_name = self.browser.find_element(*ProductPageLocators.PRODUCT_NAME).text\n        correct_product_name = self.browser.find_element(*ProductPageLocators.CORRECT_PRODUCT_NAME).text\n    \n>       assert product_name == correct_product_name, \"Product name is not correct\"\nE       AssertionError: Product name is not correct\n\nmodule_5\\pages\\product_page.py:17: AssertionError"}, "attachments": [{"name": "stdout", "source": "a7c5232d-a9e9-42a4-92f7-cc053505485a-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "promo_offer", "value": "'offer7'"}], "start": 1616356936167, "stop": 1616356940523, "uuid": "cc57f793-0494-4b71-8328-aa7e22543eb4", "historyId": "8433857a769ecd2ca3eba03399b040cb", "testCaseId": "0dfdfd1797a0034073e745572a047fc5", "fullName": "module_5.test_product_page.TestProductPage#test_guest_can_add_product_to_basket", "labels": [{"name": "tag", "value": "@pytest.mark.xfail"}, {"name": "parentSuite", "value": "module_5"}, {"name": "suite", "value": "test_product_page"}, {"name": "subSuite", "value": "TestProductPage"}, {"name": "host", "value": "andreihp4525s"}, {"name": "thread", "value": "10876-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "module_5.test_product_page"}]}